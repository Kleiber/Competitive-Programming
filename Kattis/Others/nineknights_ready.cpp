/**
*  Generated by tpp tool
*  File: nineknights.cpp
*  Created: 06-10-2020 19:33:15
**/

#include <bits/stdc++.h>
#define MAX 5
#define MOV 8
#define NINE 9
using namespace std;


bool isValid(int r, int c, int R, int C) {
	return r >= 0 && r < R && c >= 0 && c < C;
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    string M[MAX];
    for(int i = 0; i < MAX; i++) cin>>M[i];

	int dr[MOV] = {-2, -1, 1, 2, 2, 1, -1, -2};
	int dc[MOV] = {1, 2, 2, 1, -1, -2, -2, -1};

	int cont = 0;
	for(int r = 0; r < MAX; r++) {
		for(int c = 0; c < MAX; c++) {
			if(M[r][c] == 'k') {
				bool isValidKnights = true;

				for(int k = 0; k < MOV; k++) {
					int nr = r + dr[k];
					int nc = c + dc[k];
					if(isValid(nr, nc, MAX, MAX) && M[nr][nc] == 'k') {
						isValidKnights = false;
						break;
					}
				}

				if(isValidKnights) cont++;
			}
		}
	}
	if (cont == NINE) cout<<"valid"<<endl;
	else cout<<"invalid"<<endl;

    return 0;
}
