/**
*  Generated by tpp tool
*  File: reachableroads.cpp
*  Created: 07-10-2020 23:01:03
**/

#include <bits/stdc++.h>
using namespace std;


vector<bool> visited;
vector<vector<int>> G;

void dfs(int u) {
	visited[u] = 1;
	for(int i = 0; i < G[u].size(); i++) {
		int v = G[u][i];
		if(!visited[v]) dfs(v);
	}
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin>>n;

    for(int k = 0; k < n; k++) {
    	int m, r;
    	cin>>m>>r;

    	visited = vector<bool>(m, 0);
    	G = vector<vector<int>>(m);

    	for(int i = 0; i < r; i++) {
    		int u, v;
    		cin>>u>>v;
    		G[u].push_back(v);
    		G[v].push_back(u);
    	}
    	int cont = 0;
    	for(int i = 0; i < m; i++) {
    		if(!visited[i]) {
    			dfs(i);
    			cont++;
    		}
    	}

    	int ans = cont - 1;
    	cout<<ans<<endl;
    }

    return 0;
}
