/**
*  Generated by tpp tool
*  File: islands3.cpp
*  Created: 06-10-2020 20:29:19
**/

#include <bits/stdc++.h>
#define MAX 55
#define MOV 4
using namespace std;


int r, c;
bool visited[MAX][MAX];
vector<string> image;
int dr[MOV] = {-1, 0, 1, 0};
int dc[MOV] = {0, 1, 0, -1};

bool isValid(int i, int j) {
	return i >= 0 && i < r && j >= 0 && j < c;  
}

void dfs(int i, int j) {
	visited[i][j] = 1;
	for(int k = 0; k < MOV; k++) {
		int nr = i + dr[k];
		int nc = j + dc[k];
		if(isValid(nr, nc)) {
			bool possibleLand = (image[nr][nc] == 'L' || image[nr][nc] == 'C');
			if(possibleLand && !visited[nr][nc]) dfs(nr, nc);
		}
	}
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin>>r>>c;

    memset(visited, 0, sizeof(visited));
    image = vector<string>(r);

    for(int i = 0; i < r; i++) cin>>image[i];

    int cont = 0;
    for(int i = 0; i < r; i++) {
    	for(int j = 0; j < c; j++) {
    		if(image[i][j] == 'L' && !visited[i][j]) {
    			cont++;
    			dfs(i, j);
    		}
    	}
    }

    cout<<cont<<endl;
    
    return 0;
}
